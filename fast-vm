#!/bin/bash

function check_empty {
	var_name="$1"
	var_value="$2"
	if [ -z "$var_value" ]; then
		echo "[err] variable $var_name not declared in configuration"
		exit 2
	fi
}

if [ -z "$1" ]; then
	echo "usage:"
	echo "$0 import_image rhel_version /path/to/image.gz /path.to/image/libvirt.xml"
	echo "$0 create rhel_version [VM_number]"
	echo "$0 start VM_number"
	echo "$0 console VM_number"
	echo "$0 delete VM_number"
	exit 1
fi

## fast-vm configuration
if [ ! -f "$HOME/.fast-vm/config" ]; then
	echo "[err] no configuration found in ~/.fast-vm/config"
	echo "please generate configuration by using setup-default-configuration.sh"
	exit 1
fi

# load and verify configuration
. ~/.fast-vm/config

check_empty "VM_PREFIX" "$VM_PREFIX"
check_empty "LIBVIRT_NETWORK" "$LIBVIRT_NETWORK"
check_empty "THINPOOL_VG" "$THINPOOL_VG"
check_empty "THINPOOL_LV" "$THINPOOL_LV"

case "$1" in
	import_image)
		rhel_version="$2"
		if [ -z "$rhel_version" ]; then
			echo "[err] missing rhel version"
			exit 1
		fi
		image_path="$3"
		if [ ! -f "$image_path" ]; then
			echo "[err] image file not found"
			exit 1
		fi
		image_xml_path="$4"
		if [ ! -f "$image_xml_path" ]; then
			echo "[err] image xml file not found"
			exit 1
		fi

		echo "creating LV $VM_PREFIX$rhel_version ..."
		lvcreate -n $VM_PREFIX$rhel_version -V 10G --thinpool $THINPOOL_VG/$THINPOOL_LV
		if [ "$?" != "0" ]; then
			echo "[err] Error creating thin LV for VM image"
			exit 1
		fi

		echo "importing image $image_path into /dev/$THINPOOL_VG/$VM_PREFIX$rhel_version"
		gunzip -c "$image_path"| dd of=/dev/$THINPOOL_VG/$VM_PREFIX$rhel_version bs=1M conv=sparse
		if [ "$?" != "0" ]; then
			echo "[err] Error copying the image into thin LV"
			exit 1
		fi

		# copy the XML configuration file
		if [ ! -d "$HOME/.fast-vm" ]; then 
			mkdir "$HOME/.fast-vm"
		fi
		cp "$image_xml_path" "$HOME/.fast-vm/config-${rhel_version}.xml"
		echo "[info] image imported"
		;;
	create)
		rhel_version="$2"
		if [ -z "$rhel_version" ]; then
			echo "[err] missing rhel version"
			exit 1
		fi
		#TBD FIXME check the VM number if it's correct

		rnum=$((20+$RANDOM%200))
		vm_number=${3:$rnum}

		if [ ! -f "~/.fast-vm/config-${rhel_version}.sh" ]; then
			echo "[wrn] no hacks for this version, no ~/.fast-vm/config-${rhel_version}.sh found"
		fi
		if [ ! -f "~/.fast-vm/config-${rhel_version}.xml" ]; then
			echo "[err] no VM XML definition for this version, no ~/.fast-vm/config-${rhel_version}.xml found"
			exit 1
		fi

		if [ ! -b "/dev/$THINPOOL_VG/$VM_PREFIX-$rhel_version" ]; then
			echo "[err] Missing image for this rhel version"
			echo " /dev/$THINPOOL_VG/$VM_PREFIX-$rhel_version not found"
			echo " first import image using   $0 $rhel_version /path/to/image.gz"
			exit 2
		fi
		
		## check if the machine doesn't exists already
		if [ -b "/dev/$THINPOOL_VG/$VM_PREFIX-$rhel_version-$vm_number" ]; then
			echo "[err] there is already disk for this machine, aborting"
			exit 1
		fi

		echo "[info] creating disk ..."
		echo "lvcreate --ignoreactivationskip -s --thinpool $THINPOOL_VG/$THINPOOL_LV /dev/$THINPOOL_VG/$VM_PREFIX-$rhel_version --name $VM_PREFIX-$rhel_version-$vm_number"
		echo "[info] defining virtual machine in libvirt ..."

		sed -e "s/VM_NAME/$VM_PREFIX-$rhel_version-$vm_number/g; s/VG_NAME/$THINPOOL_VG/g; s/NET_NAME/$LIBVIRT_NETWORK/g;" ~/.fast-vm/config-${rhel_version}.xml > /tmp/machine.xml
		echo "virsh define /tmp/machine.xml"

		echo "reservating DHCP lease"
		vm_mac=$(virsh dumpxml "$VM_PREFIX-$rhel_version-$vm_number"|grep 'mac address'|cut -d\' -f 2)

		#FIXME need to gather SUBNET_NUMBER
		virsh net-update "$LIBVIRT_NETWORK" add-last ip-dhcp-host --xml "<host mac='$vm_mac' ip='192.168.$SUBNET_NUMBER.$vm_number'/>" --live --config

		# source file with hacks and apply them
		if [ -f "~/.fast-vm/config-${rhel_version}.sh"]; then
			. ~/.fast-vm/config-${rhel_version}.sh
		fi
		echo "VM '$VM_PREFIX-$rhel_version-$vm_number' created"
		;;

	start)
		vm_number="$2"
		if [ -z "$vm_number" ]; then 
			echo "[err] VM number missing"
			exit 1
		fi	
		$vm_name=$(virsh list --all |grep "$VM_PREFIX-"|grep "-$VM_NUMBER")

		#TBD FIXME activate inative LV
			
		virsh start $vm_name
		;;
	console)
		vm_number="$2"
		if [ -z "$vm_number" ]; then 
			echo "[err] VM number missing"
			exit 1
		fi	
		$vm_name=$(virsh list --all |grep "$VM_PREFIX-"|grep "-$VM_NUMBER")

		virsh console $vm_name
		;;
	delete)
		vm_number="$2"
		if [ -z "$vm_number" ]; then 
			echo "[err] VM number missing"
			exit 1
		fi	
		$vm_name=$(virsh list --all |grep "$VM_PREFIX-"|grep "-$VM_NUMBER")
	
		virsh destroy $vm_name

		echo "reservating DHCP lease delete"
		vm_mac=$(virsh dumpxml "$vm_name"|grep 'mac address'|cut -d\' -f 2)

		#FIXME need to gather SUBNET_NUMBER
		virsh net-update "$LIBVIRT_NETWORK" delete ip-dhcp-host --xml "<host mac='$vm_mac' ip='192.168.$SUBNET_NUMBER.$vm_number'/>" --live --config

		lvremove -f /dev/$THINPOOL_VG/$vm_name

		virsh undefine $vm_name

		;;
	*) 
		echo "[err] unknown action"
		;;
esac	
