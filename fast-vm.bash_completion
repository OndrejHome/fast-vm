# fast-vm completion                                    -*- shell-script -*-

_fast-vm()
{
	local cur prev words cword split thin_lv thin_vg vm_prefix
	_init_completion -s || return

	vm_prefix=$(grep VM_PREFIX /etc/fast-vm.conf|tail -1 |cut -d\= -f 2)
	thin_lv=$(grep THINPOOL_LV /etc/fast-vm.conf|tail -1 |cut -d\= -f 2)
	thin_vg=$(grep THINPOOL_VG /etc/fast-vm.conf|tail -1 |cut -d\= -f 2)

	if [ "$cword" -eq 3 ] && [ ${COMP_WORDS[1]} == "import_image" ]; then
		_filedir '@(gz|xz)'
		return 0
	fi
	if [ "$cword" -eq 4 ] && [ ${COMP_WORDS[1]} == "import_image" ]; then
		_filedir '@(xml)'
		return 0
	fi
	if [ "$cword" -eq 5 ] && [ ${COMP_WORDS[1]} == "import_image" ]; then
		_filedir '@(sh)'
		return 0
	fi

	if [ "$cword" -eq 3 ] && [ ${COMP_WORDS[1]} == "start" ]; then
	        COMPREPLY=( $( compgen -W "console ssh" -- "$cur" ) )
		return 0
	fi

	if [ "$cword" -eq 3 ] && [ ${COMP_WORDS[1]} == "stop" ]; then
	        COMPREPLY=( $( compgen -W "graceful" -- "$cur" ) )
		return 0
	fi

	if [ "$cword" -eq 3 ] && [ ${COMP_WORDS[1]} == "create" ]; then
		local number_used number_all number_available
		number_used=$(mktemp)
		number_all=$(mktemp)
		virsh --connect qemu:///system list --all|awk '{print $2}'|egrep "^${vm_prefix}.*-[0-9]+"|sed 's/.*-\([0-9]\+\)$/\1/'> $number_used
		seq 20 220 > $number_all
		number_available=$(comm -2 -3 <(sort $number_all) <(sort $number_used))
		COMPREPLY=( $( compgen -W "base $number_available" -- "$cur" ) )
		rm -f $number_all $number_used
		return 0
	fi
	if [ "$cword" -eq 4 ] && [ ${COMP_WORDS[1]} == "create" ]; then
		_filedir '@(xml)'
		return 0
	fi
	if [ "$cword" -eq 5 ] && [ ${COMP_WORDS[1]} == "create" ]; then
		_filedir '@(sh)'
		return 0
	fi

	case $prev in
		import_image)
		return 0
		;;
	create|remove_image)
		local image_name
		# lets get the dm-XX number of the thinpool
		double_dash=$(echo "$thin_lv"|sed 's/-/--/g') # LVM uses double dash in the /dev/mapper
		double_dash_vg=$(echo "$thin_vg"|sed 's/-/--/g') # also for VGs
		pool_dm=$(ls -l "/dev/mapper/$double_dash_vg-$double_dash-tpool"|cut -d / -f 5)
		# from dm-XX of thinpool we can list the LVs inside the thinpool 
		holders=$(ls /sys/block/$pool_dm/holders)
		holder_regexp=""
		for dm in $holders
		do
			if [ -z "$holder_regexp" ]; then
				holder_regexp="$dm"
			else
				holder_regexp="$holder_regexp|$dm"
			fi
		done
		holder_regexp="($holder_regexp)"
		# finaly lets parse the VM image versions from what we have
		image_name=$(ls -l /dev/$thin_vg/ |egrep "$holder_regexp"|awk '{print $9}'|grep "$vm_prefix"|sed -e "s/$vm_prefix//; s/-[0-9]\+$//"|uniq)

		COMPREPLY=( $( compgen -W "$image_name" -- "$cur" ) )
		return 0
		;;
	start|stop|delete|console|ssh)
		local vm_numbers vm_option
		case $prev in
			start)
				vm_option='--inactive'
			;;
			delete)
				vm_option='--all'
			;;
			console|ssh|stop)
				vm_option='--state-running'
			;;
		esac
		vm_numbers=$(virsh --connect qemu:///system list "$vm_option"|awk '{print $2}'|egrep "^${vm_prefix}.*-[0-9]+"|sed 's/.*-\([0-9]\+\)$/\1/')
		COMPREPLY=( $( compgen -W "$vm_numbers" -- "$cur" ) )
		return 0
		;;
	esac

	$split && return 0
	if [ "$cword" -lt 2 ]; then
		COMPREPLY=( $( compgen -W 'import_image remove_image create start stop delete console ssh list' -- "$cur" ) )
		return 0
	fi

} &&
complete -F _fast-vm fast-vm

# ex: ts=4 sw=4 et filetype=sh
