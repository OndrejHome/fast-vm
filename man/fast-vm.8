.TH FAST-VM 8 "fast-vm 1.6 (2019-10-03)" "fast-vm" "fast-vm" \" -*- nroff -*-
.SH NAME
fast-vm \(em script for creating VMs from images on top of thin LVM pool
.SH SYNOPSIS
.B fast-vm
.RB <action>
.RB <options>

.B fast-vm
.B create 
.RI < ImageName | ProfileName >
.RB < base 
.RI | VmNumber | "'VmNumber1 VmNumber2 ...'" >
.RI [ PathToLibvirtXML ]
.RI [ PathToHacksFile ]

.B fast-vm
.B info
.RI < VmNumber | "'VmNumber1 VmNumber2 ...'" >

.B fast-vm
.B delete
.RI < VmNumber | "'VmNumber1 VmNumber2 ...'" >
.RI [ PathToDeleteHacksFile ]

.B fast-vm
.B edit_note
.RI < VmNumber | "'VmNumber1 VmNumber2 ...'" >
.RI [ NoteText ]

.B fast-vm
.B resize
.RI < VmNumber | "'VmNumber1 VmNumber2 ...'" >
.I NewSizeInGiB

.B fast-vm
.B list
.RB [ all | active | inactive
.RB [ short ]]

.B fast-vm
.B start
.RI < VmNumber | "'VmNumber1 VmNumber2 ...'" >
.RB [ console | ssh 
.RI [ /path/to/custom/script ]]

.B fast-vm
.B stop
.RI < VmNumber | "'VmNumber1 VmNumber2 ...'" >
.RB [ graceful ]

.B fast-vm
.BI "console " VmNumber

.B fast-vm
.B keydist
.RI < VmNumber | "'VmNumber1 VmNumber2 ...'" >

.B fast-vm
.B ssh
.RI < VmNumber | "'VmNumber1 VmNumber2 ...'" >
.RI [ /path/to/custom/script ]

.B fast-vm
.B scp
.RI < VmNumber | "'VmNumber1 VmNumber2 ...'" >
.RI < "vm:/remote/sourcefile ... /local/destfile" | "/local/sourcefile ... vm:/remote/destfile" >

.B fast-vm
.B compact
.RI < VmNumber | "'VmNumber1 VmNumber2 ...'" >

.SH DESCRIPTION
fast-vm script provides simple command-line interface to create virtual machines (VMs) 
in libvirt using VM disk images saved in LVM thinpool and XML templates stored on file system.

VM disk images are saved in LVM thinpool LV for space efficiency. XML templates for VM are 
libvirt XMLs with few macros that fast-vm replaces (see TEMPLATE MACROS).
When creating a VM, fast-vm will create new writable LVM snapshot from existing image, 
define libvirt VM from XML and crate a static DHCP reservation in libvirt network on 
which VM will be for predictable IP address based on VmNumber (see OPTIONS).
Optionally fast-vm customize new VM during creation using 'hack files' shell script.

Images for fast-vm can be either downloaded from Internet (see GETTING IMAGES in fast-vm-image
man page) or created from scratch (see CREATING CUSTOM IMAGES in fast-vm-image man page).

.RB "To start using fast-vm you need to configure it first using command " configure-fast-vm 
.RB "and add users that will fast-vm into " libvirt " system group.
Configuration command will create thinpool LV and libvirt network for you or you can use
existing ones.

Primary use case of fast-vm is creation of scratch VMs on single local machine.

.SH OPTIONS

.TP
.B VmNumber
Number identifying the VM. Currently limited to range 20-220 that allows fast-vm to use it as octet of the IP address and still leave some space for static addresses.

.TP
.B ImageName
.RB "Name of image imported in the fast-vm. It should contain only alpha-numerical characters. " "ImageName"
is part of the LV name and libvirt machine name.

.TP 
.B PathToImage
.BI "PathToImage " /path/to/image.{gz,xz}
.br
.BI "PathToImage " http://url/to/image.{gz,xz}
.sp
Local path or http/https URL to image file in GZIP or XZ format. From fast-vm-1.2 if the filename of image matches regular
expression "[0-9]+g__" then the number before 'g' is used as the image size that will be imported (this can be overridden by
.RB "using the " "import_custom_image" " action)."
By default fast-vm assumes size of image to be 10GB.

.TP
.B PathToLibvirtXML
.BI "PathToLibvirtXML " /path/to/libvirt.xml
.br
.BI "PathToLibvirtXML " htto://url/to/libvirt.xml
.sp
Local path or http/https URL to libvirt VM XML template. Check the
.B TEMPLATE MACROS
for list of supported macros in the VM XML template.

.TP 
.B PathToHacksFile
.BI "PathToHacksFile " /path/to/hacks.sh
.br
.BI "PathToHacksFile " http://url/to/hacks.sh
.sp
Local path or http/https URL to shell script which will be executed after creation of the VM and allows
to access the disk drive of the VM before first running it.

.TP
.B PathToDeleteHacksFile
.BI "PathToDeleteHacksFile " /path/to/delete-hacks.sh
.br
.BI "PathToDeleteHacksFile " http://url/to/delete-hacks.sh
.sp
Local path or http/https URL to shell script which will be executed during VM delete process as last step
before the VM is undefined from the libvirt.

.TP
.I /path/to/custom/script
Local path to script which will be executed as soon as the VM is started and reachable by SSH via its IP address assigned by DHCP.
This can be used for automation that needs to wait for SSH to become ready.

.TP
.I vm:/remote/sourcefile|/local/sourcefile
Path to the source file to be copied via SCP.
Can be either local file on fast-vm host or remote file/direcotry on fast-vm VM.
Use the literal hostname 
.I vm
to denote that the file should be copied from the fast-vm VM.
fast-vm will replace 'vm:' with the VM IP.

.TP
.I /local/destfile|vm:/remote/destfile
Path to the destination file to be written to, via SCP.
Can be either local file on fast-vm host or remote file/direcotry on fast-vm VM.
Use the literal hostname 
.I vm
to denote that the file should be copied from the fast-vm VM.
fast-vm will replace 'vm:' with the VM IP.

.SH RESIZING DISKS (from fast-vm-1.2)
Disks can be resized only when VM is trned off.
.br
.BR "WARNING: " "Shrinking disk size (making size of disk smaller) can cause DATA LOSS. Think before doing so. You will NOT be prompted to confirm your choice."

.SH EXAMPLES
Create VM from '6.7' image with number 42
.sp
.BI "fast-vm create " "6.7 42"

Start VM number 42 and connect to it's serial console
.sp
.BI "fast-vm start " "42 console"

Start VM number 42 connect to it via SSH as root when SSH to machine is ready
.sp
.BI "fast-vm start " "42 ssh"

Create machine with custom definition and hack file. Start it and after it's SSH connection is ready execute custom script 'test.sh'.
.sp
.BI "fast-vm create " "6.7 42 /tmp/custom\-libvirt.xml /tmp/custom\-hacks.sh"
&& 
.BI "fast-vm start " "42 ssh /tmp/test.sh"

.RB "Assign text note to VM. If note text is not provided, default editor from " "$EDITOR" " is launched."
.sp
.BI "fast-vm edit_note " "42 'this is testing machine'"

.RB "Change disk size of the VM number " "42" " to " "20" " GB."
.sp
.BI "fast-vm resize " "42 20"

.RB "Create VMs with numbers 43, 44, 45 using the " "6.7" " image with single command."
.sp
.BI "fast-vm create " "6.7 '43 44 45'"

.RB "Automatically create an ssh key if it doesn't already exist and distribute it to VMs 41 and 42"
.sp
.BI "fast-vm keydist " "'41 42'"

.RB "scp a script to VMs 41 and 42. By default this goes in root's home directory, or specify a path instead"
.sp
.BI "fast-vm scp " "'41 42' script.sh vm:"

.RB "Compact the disks of inactive VMs 41 and 42 ( using " "virt-sparsify" " ) to reclaim unused free space from VMs."
.sp
.BI "fast-vm compact " "'41 42'"

.SH EXIT CODES
In case of error the fast-vm will return non-zero exit code. When multiple VMs were specified then zero exit code is returned only when operation succeeded on all VMs. If any of VMs reported non-zero exit code, then the overall exit code will also be non-zero.

.SH SEE ALSO
.BR fast-vm-image (8),
.BR fast-vm.conf (5),
.BR configure-fast-vm (8),
.BR fast-vm-list (8)
