== FAST-VM ==
fast-vm â€” script for defining VMs from images provided in thin LVM pool

fast-vm is provides command-line interface to create virtual machines (VMs) in libvirt,
based on imported disks in LVM and XML templates.

Templates of VM disk drives are stored in LVM thinpool LV for space efficiency. Templates
for VMs are just libvirt XMLs with few macros from fast-vm. When creating a VM, fast-vm will
create new writable LVM snapshot of disk drive, define libvirt VM for it and make a static
DHCP reservation for libvirt network on which VM will be.
Optionally fast-vm allows to do some customization of disk drive of new machine before
starting VM using the 'hack files'.

====== Requirements ======
* libvirt with qemu/kvm 
* LVM thin pool support
* LVM VG with reasonable amount of free space (to create LV with thin pool)
* preconfigured VM disk images and XML files (downloadable separately)
* 'dhcp_release' for proper DHCP static leases release
* (optional) 'bash-completion' for bash completion to work
* (optional) 'pv' to show import progress
* (optional) 'curl' to pass http(s) link for image_import

====== Installation ======
=== From source
## As root
1. Install using command 'make install'
2. Continue with 'FAST-VM Configuration'

=== From RPM
## As root
1. Install RPM
  # dnf install fast-vm-*.rpm
2. Continue with 'FAST-VM Configuration'

====== FAST-VM Configuration ======
## As root user
1. Run 'configure-fast-vm' script (/usr/sbin/configure-fast-vm
Script will:
- create default configuration file from your answers
- create LVM thin pool with name and size of your choice
- libvirt NAT network for VMs

You can interrupt scriptat anytime and run it again to continue
or to validate the settings.

## As normal user (normal user must be member of 'libvirt' group)
2. Import some prebuilded VM disk images or use your

fast-vm import_image <vm_image_version> </path/to/image.gz> </path/to/vm_template.xml> </path/to/image-hacks.sh>

vm_image_version
  - usually something like '6.7', '6_7', '7' or '7-test'
    (used for composing LV name and VM hostname)
/path/to/image.gz | http://somewhere.on.the.net/path/to/image.tar.gz
  - gzipped VM machine drive in the 'raw' format
  - to create your own you can use command below
     gzip -c /dev/some_vg/lv_with_vm_drive > my_vm_drive_image.img.gz
/path/to/vm_template.xml
  - XML template for creating libvirt VM, check below for supported macros
  # vm_template.xml macros
    VM_NAME - substituted for VM name (VM_prefix+image_name+vm_number)
    THINPOOL_VG - THINPOOL_VG from configuration
    LIBVIRT_NETWORK - LIBVIRT_NETWORK from configuration
/path/to/image-hacks.sh
  - file containing commands that are executed before creating new machine from
    imported image (typicaly this includes modification to system like change of
    hostname or serial console setting, check the fast-vm-public-images repo for examples)

====== Usage ======
assuming you have imported the image of centos 6.7 using following command
  # fast-vm import_image 6.7 centosl6.7.img.gz centos-6.3-7.2.xml centos-7-hacks.sh

a) To edit the VM image so the other VMs are created from this edited image
  # fast-vm create 6.7 base
    ...
    base image VM created, to start this VM use 'virsh start fastvm-6.7'
    This VM is used for customizing the base image of '6.7' VMs
    All changes you make to this VM would be available in newly created VMs
    of that version, this will not affect already existing VMs of same version

  Here you can for example register your system, add your ssh key for easier access, etc.

b) To create new VM based on that image run
  # fast-vm create 6.7 113
    ...
    VM 'fastvm-6.7-113' created

  fast-vm created static IP reservation on 192.168.XX.113 in libvirts DHCP 
  for VMs mac address.

  You can override the default libvirt.xml and hacks.sh file for new VM
  by specifing it after VM number
  # fast-vm create 113 custom_libvirt_for_113.xml custom_hacks_for_113.sh

c) To start VM - you need to know only VM number
  # fast-vm start 113

  As thir paramter you can specify 'console' for connecting to serial console
  of 'ssh' to wait for ssh on VM to come up and connect as root.

  # fast-vm start 113 console

d) Connect to serial console of VM after the VM is started
  # fast-vm console 113

e) Delete VM - note that script will try to stop the VM first before deleting it
  # fast-vm delete 113

====== Configuration ======
Configuration variables in the  /root/.config/fast-vm/config
VM_PREFIX   - prefix for VM names in libvirt and for thin LV names
THINPOOL_VG - name of VG on which is the thin pool
THINPOOL_LV - name of the thinpool (LV)
LIBVIRT_NETWORK - name of the libvirt network and bridge adapter for NAT networking
SUBNET_NUMBER - the XX in the 192.168.XX.0/24 libvirt network created by setup

====== Known bugs/limitation ======
* initial setup requires root
* tested on the Gentoo and Fedora 22
* Gentoo libvirt special requirements in /etc/libvirt/libvirtd.conf
** unix_sock_group = "libvirt"
** unix_sock_rw_perms = "0770"
* Gentoo might require user to be in group 'kvm' to use guestfish from hacks files
* Fedora 22 BUG: libvirt-daemon shipped on installation media doesn't create the 'libivrt' group.
  updating the package solves the problem
* VM images are provided separately
  - publicaly available images can be found at  https://github.com/OndrejHome/fast-vm-public-images
* using 'dhcp_release' to remove DHCP static reservation is not the cleanest
  way of doing so, but there is no other supported way of doing this through libvirt
  (TODO: make RFE/BUG into libvirt)
* BUG: sometimes the VM doesn't get designated IP address because the dnsmasq holds
       the lease for some older MAC address (dhcp_release should be fixing this but
       it's not 100% working solution)

===== Upgrading from the 0.2 to 0.3 =====
* version 0.2 required root to run, 0.3 doesn't require root for normal operations
* first copy /root/.fast-vm/config into /etc/fast-vm.conf (this is new central configuration file)
* update hack files and libvirt definitions:
** due to some changes to way how to connect to libvirt you will have to download new "hack files" for the
version taht you have imported or you can just re-import images and hack files would get updateed 
  or
** copy all '.xml' and '.sh' files from /root/.fast-vm/ into your user $HOME/.fast-vm/ to be able to use 
images that are already imported

====== Where the files get installed ======
/usr/bin/fast-vm
/usr/sbin/configure-fast-vm
/usr/libexec/fast-vm-helper.sh
<bash_completion_dir>/fast-vm
/etc/sudoers.d/fast-vm-sudoers
/usr/share/fast-vm/fast-vm.conf.defaults
/usr/share/fast-vm/fast-vm-network.xml

=== Author ===
Ondrej Famera <ofamera@redhat.com> or <ondrej-xa2iel8u@famera.cz>
